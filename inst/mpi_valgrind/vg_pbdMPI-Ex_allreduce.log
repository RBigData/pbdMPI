==7428== Memcheck, a memory error detector
==7428== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==7428== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==7428== Command: /home/snoweye/work-my/local/R-devel/lib/R/bin/exec/R --vanilla
==7428== 
==7428== Conditional jump or move depends on uninitialised value(s)
==7428==    at 0x55959E0: __wcsnlen_sse4_1 (strlen.S:147)
==7428==    by 0x5582EC1: wcsrtombs (wcsrtombs.c:104)
==7428==    by 0x5508B20: wcstombs (wcstombs.c:34)
==7428==    by 0x50A63BC: wcstombs (stdlib.h:154)
==7428==    by 0x50A63BC: tre_parse_bracket_items (tre-parse.c:336)
==7428==    by 0x50A63BC: tre_parse_bracket (tre-parse.c:453)
==7428==    by 0x50A63BC: tre_parse (tre-parse.c:1380)
==7428==    by 0x509DDB8: tre_compile (tre-compile.c:1920)
==7428==    by 0x509B500: tre_regcompb (regcomp.c:150)
==7428==    by 0x4F9CF57: do_gsub (grep.c:1832)
==7428==    by 0x4F6F740: bcEval (eval.c:6765)
==7428==    by 0x4F7C4EF: Rf_eval (eval.c:620)
==7428==    by 0x4F7E34E: R_execClosure (eval.c:1780)
==7428==    by 0x4F7F092: Rf_applyClosure (eval.c:1706)
==7428==    by 0x4F7C6B9: Rf_eval (eval.c:743)
==7428== 

R Under development (unstable) (2019-04-03 r76310) -- "Unsuffered Consequences"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "pbdMPI"
> source(file.path(R.home("share"), "R", "examples-header.R"))
==7428== Conditional jump or move depends on uninitialised value(s)
==7428==    at 0x5595A61: __wcsnlen_sse4_1 (strlen.S:161)
==7428==    by 0x5582EC1: wcsrtombs (wcsrtombs.c:104)
==7428==    by 0x5508B20: wcstombs (wcstombs.c:34)
==7428==    by 0x4EF790B: wcstombs (stdlib.h:154)
==7428==    by 0x4EF790B: do_tolower (character.c:1032)
==7428==    by 0x4F6F740: bcEval (eval.c:6765)
==7428==    by 0x4F7C4EF: Rf_eval (eval.c:620)
==7428==    by 0x4F7E34E: R_execClosure (eval.c:1780)
==7428==    by 0x4F7F092: Rf_applyClosure (eval.c:1706)
==7428==    by 0x4F73091: bcEval (eval.c:6733)
==7428==    by 0x4F7C4EF: Rf_eval (eval.c:620)
==7428==    by 0x4F7E34E: R_execClosure (eval.c:1780)
==7428==    by 0x4F7F092: Rf_applyClosure (eval.c:1706)
==7428== 
> options(warn = 1)
> library('pbdMPI')
> 
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> 
> 
> ### A lot of examples are removed from this file.
> ### See "pbdMPI-Ex.R" from the "R CMD check" for all examples.
> 
> 
> cleanEx()
> nameEx("aa_allreduce-method")
> ### * aa_allreduce-method
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: allreduce-method
> ### Title: All Ranks Receive a Reduction of Objects from Every Rank
> ### Aliases: allreduce-method allreduce,ANY,missing-method
> ###   allreduce,integer,integer-method allreduce,numeric,numeric-method
> ###   allreduce,logical,logical-method allreduce,float32,float32-method
> ###   allreduce
> ### Keywords: methods collective
> 
> ### ** Examples
> 
> ### Save code in a file "demo.r" and run with 2 processors by
> ### SHELL> mpiexec -np 2 Rscript demo.r
> 
> spmd.code <- "
+ ### Initial.
+ suppressMessages(library(pbdMPI, quietly = TRUE))
+ init()
+ .comm.size <- comm.size()
+ .comm.rank <- comm.rank()
+ 
+ ### Examples.
+ N <- 5
+ x <- (1:N) + N * .comm.rank
+ y <- allreduce(matrix(x, nrow = 1), op = \"sum\")
+ comm.print(y)
+ 
+ y <- allreduce(x, double(N), op = \"prod\")
+ comm.print(y)
+ 
+ comm.set.seed(1234, diff = TRUE)
+ x <- as.logical(round(runif(N)))
+ y <- allreduce(x, logical(N), op = \"land\")
+ comm.print(y)
+ 
+ ### Finish.
+ finalize()
+ "
> pbdMPI::execmpi(spmd.code = spmd.code, nranks = 2L)
>>> MPI command:
/home/snoweye/work-my/local/ompi/bin/mpiexec -np 2 /home/snoweye/work-my/local/R-devel/lib/R/bin/Rscript /tmp/RtmpPIyu3M/file1d0423e9c116 > /tmp/RtmpPIyu3M/file1d044cd85e7a 2>&1 & echo "PID=$!" &
>>> MPI PID:
PID=7458
>>> MPI results:

> 
> 
> ### To force free memory of some MPI stuffs in "zz_spmd_internal".
> finalize(mpi.finalize = TRUE)
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  14.174 0.179 14.463 0.013 0.032 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
==7428== 
==7428== HEAP SUMMARY:
==7428==     in use at exit: 55,642,902 bytes in 13,113 blocks
==7428==   total heap usage: 72,691 allocs, 59,578 frees, 120,928,620 bytes allocated
==7428== 
==7428== 1 bytes in 1 blocks are definitely lost in loss record 1 of 1,673
==7428==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7428==    by 0x55629B9: strdup (strdup.c:42)
==7428==    by 0x1947F042: ???
==7428==    by 0x1927959F: ???
==7428==    by 0x11F354AA: mca_base_framework_components_register (in /home/snoweye/work-my/local/ompi/lib/libopen-pal.so.40.20.1)
==7428==    by 0x11F35831: mca_base_framework_register (in /home/snoweye/work-my/local/ompi/lib/libopen-pal.so.40.20.1)
==7428==    by 0x11F35890: mca_base_framework_open (in /home/snoweye/work-my/local/ompi/lib/libopen-pal.so.40.20.1)
==7428==    by 0x11935DB4: ompi_mpi_init (in /home/snoweye/work-my/local/ompi/lib/libmpi.so.40.20.1)
==7428==    by 0x11966210: PMPI_Init (in /home/snoweye/work-my/local/ompi/lib/libmpi.so.40.20.1)
==7428==    by 0x123F7CC7: spmd_initialize (spmd.c:32)
==7428==    by 0x4F35705: do_dotcall (dotcode.c:1252)
==7428==    by 0x4F6F740: bcEval (eval.c:6765)
==7428== 
==7428== 4 bytes in 1 blocks are definitely lost in loss record 4 of 1,673
==7428==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7428==    by 0x55629B9: strdup (strdup.c:42)
==7428==    by 0x13EEA0EE: ???
==7428==    by 0x13EA8877: ???
==7428==    by 0x13E5271A: ???
==7428==    by 0x132201CA: ???
==7428==    by 0x11C31410: orte_init (in /home/snoweye/work-my/local/ompi/lib/libopen-rte.so.40.20.1)
==7428==    by 0x119359DB: ompi_mpi_init (in /home/snoweye/work-my/local/ompi/lib/libmpi.so.40.20.1)
==7428==    by 0x11966210: PMPI_Init (in /home/snoweye/work-my/local/ompi/lib/libmpi.so.40.20.1)
==7428==    by 0x123F7CC7: spmd_initialize (spmd.c:32)
==7428==    by 0x4F35705: do_dotcall (dotcode.c:1252)
==7428==    by 0x4F6F740: bcEval (eval.c:6765)
==7428== 
==7428== 79 (64 direct, 15 indirect) bytes in 1 blocks are definitely lost in loss record 48 of 1,673
==7428==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7428==    by 0x18C5F1C8: ???
==7428==    by 0x11F29D0D: mca_base_framework_components_open (in /home/snoweye/work-my/local/ompi/lib/libopen-pal.so.40.20.1)
==7428==    by 0x11FA6931: mca_mpool_base_open (in /home/snoweye/work-my/local/ompi/lib/libopen-pal.so.40.20.1)
==7428==    by 0x11F35900: mca_base_framework_open (in /home/snoweye/work-my/local/ompi/lib/libopen-pal.so.40.20.1)
==7428==    by 0x11935D57: ompi_mpi_init (in /home/snoweye/work-my/local/ompi/lib/libmpi.so.40.20.1)
==7428==    by 0x11966210: PMPI_Init (in /home/snoweye/work-my/local/ompi/lib/libmpi.so.40.20.1)
==7428==    by 0x123F7CC7: spmd_initialize (spmd.c:32)
==7428==    by 0x4F35705: do_dotcall (dotcode.c:1252)
==7428==    by 0x4F6F740: bcEval (eval.c:6765)
==7428==    by 0x4F7C4EF: Rf_eval (eval.c:620)
==7428==    by 0x4F7E34E: R_execClosure (eval.c:1780)
==7428== 
==7428== LEAK SUMMARY:
==7428==    definitely lost: 69 bytes in 3 blocks
==7428==    indirectly lost: 15 bytes in 1 blocks
==7428==      possibly lost: 0 bytes in 0 blocks
==7428==    still reachable: 55,642,818 bytes in 13,109 blocks
==7428==                       of which reachable via heuristic:
==7428==                         newarray           : 4,264 bytes in 1 blocks
==7428==         suppressed: 0 bytes in 0 blocks
==7428== Reachable blocks (those to which a pointer was found) are not shown.
==7428== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==7428== 
==7428== For counts of detected and suppressed errors, rerun with: -v
==7428== Use --track-origins=yes to see where uninitialised values come from
==7428== ERROR SUMMARY: 93 errors from 5 contexts (suppressed: 0 from 0)
